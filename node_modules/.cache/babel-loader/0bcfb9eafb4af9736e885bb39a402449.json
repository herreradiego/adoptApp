{"ast":null,"code":"import _defineProperty from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/diegoherrera/Documents/adoptar/adoptarserver/client/src/SearchForm.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Select, FormControl, InputLabel, TextField, MenuItem } from '@material-ui/core/';\nimport PropTypes from 'prop-types';\nimport LocationSubMenu from './LocationSubMenu';\nimport { Grid, Row, Button } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport Input from '@material-ui/core/Input/Input';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    mainContainer: {\n      width: '100vw',\n      height: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    formContanier: {\n      margin: '0 auto',\n      width: 500,\n      border: 'solid 0.5px black',\n      borderRadius: '5px',\n      padding: 10\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    select: {\n      width: '200px'\n    },\n    form: {\n      width: '100%'\n    }\n  };\n};\n\nvar SearchForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchForm, _Component);\n\n  function SearchForm(props) {\n    var _this;\n\n    _classCallCheck(this, SearchForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchForm).call(this, props));\n    _this.state = {\n      especies: '',\n      gender: '',\n      ageRank: '',\n      allLocations: '',\n      selectedLocation: '',\n      selected: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SearchForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3008/provincias').then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        console.log(data);\n\n        _this2.setState({\n          allLocations: data\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(name, event) {\n      var _this3 = this;\n\n      event.preventDefault();\n\n      if (name == 'SelectedProvincia') {\n        console.log(\"SelectedProvinciaid: \", event);\n\n        var getDep =\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var selectedLocation, data, departamentos, myDeps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    selectedLocation = event.target.value;\n                    _context.next = 3;\n                    return fetch(\"https://apis.datos.gob.ar/georef/api/municipios?provincia=\".concat(event.target.value, \"&campos=id,nombre&max=100\"));\n\n                  case 3:\n                    data = _context.sent;\n                    _context.next = 6;\n                    return data.json();\n\n                  case 6:\n                    departamentos = _context.sent;\n                    departamentos = departamentos.municipios;\n                    myDeps = [];\n                    departamentos.map(function (item) {\n                      myDeps.push(item);\n                    });\n\n                    _this3.setState({\n                      selectedLocation: selectedLocation,\n                      subLocations: myDeps,\n                      selected: true\n                    }, function () {\n                      _this3.setState({\n                        dataLoaded: true\n                      });\n                    });\n\n                    console.log(\"data localization\", _this3.state.allLocations);\n\n                  case 12:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function getDep() {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        getDep();\n      }\n\n      var propName = name;\n      console.log(\"CORRIO\", event.target.value);\n      this.setState(_defineProperty({}, propName, event.target.value));\n    }\n  }, {\n    key: \"getGeoData\",\n    value: function getGeoData() {\n      var cities = '';\n      console.log(\"cities\");\n      fetch('https://infra.datos.gob.ar/catalog/modernizacion/dataset/7/distribution/7.2/download/provincias.json').then(function (resp) {\n        return resp.json();\n      }).then(function (dataJson) {\n        cities = dataJson.map(function (item) {\n          return item;\n        }); //console.log(cities)    \n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(e) {\n      console.log(\"FOMR SUBMIT \", e);\n      var busqueda = {\n        species: '',\n        ageRank: '',\n        gender: '',\n        location: {\n          city: '',\n          subLocation: ''\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var classes = this.props.classes;\n      var selectOptions = this.state.allLocations;\n      var selectedLocation = this.state.selectedLocation;\n      var dataLoaded = this.state.data;\n      console.log(\"SELECTED ITEM: \", selectedLocation);\n      /*\n      \n              <FormControl fullWidth={true}>\n                                  <InputLabel>Sexo</InputLabel>\n                                      <Select autoWidth=\"true\" className={classes.Select}\n                                              value={this.state.species}\n                                              onChange={(e)=>{this.handleChange('species',e)}}\n                                              \n                                      >  \n                                          <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                          <MenuItem value={'Perros'}>Perros</MenuItem>\n                                          <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                      </Select>\n                              </FormControl>    \n          \n                  */\n\n      return React.createElement(\"div\", {\n        className: classes.mainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.formContanier,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Sexo\"), React.createElement(Select, {\n        autoWidth: \"true\",\n        value: this.state.gender,\n        onChange: function onChange(e) {\n          _this4.handleChange('gender', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 'Macho',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Macho\"), React.createElement(MenuItem, {\n        value: 'Hembra',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Hembra\")))), React.createElement(\"div\", {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        shrink: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Test\"), React.createElement(Select, {\n        autoWidth: \"true\",\n        value: this.state.species,\n        onChange: function onChange(e) {\n          _this4.handleChange('species', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 'Gatos',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Gatos\"), React.createElement(MenuItem, {\n        value: 'Perros',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Perros\")))), React.createElement(\"div\", {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Rango de Edad\"), React.createElement(Select, {\n        xs: 12,\n        autoWidth: \"true\",\n        className: classes.Select,\n        value: this.state.ageRank,\n        onChange: function onChange(e) {\n          _this4.handleChange('ageRank', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 'Cachorro',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Cachorro\"), React.createElement(MenuItem, {\n        value: 'Joven',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Joven\"), React.createElement(MenuItem, {\n        value: 'Adulto',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \" Adulto\")))), React.createElement(\"div\", {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Provincia\"), React.createElement(Select, {\n        xs: 12,\n        autoWidth: \"true\",\n        className: classes.Select,\n        value: selectedLocation,\n        onChange: function onChange(e) {\n          console.log(\"E: \", e);\n\n          _this4.handleChange('SelectedProvincia', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, selectOptions ? selectOptions.map(function (item) {\n        return React.createElement(MenuItem, {\n          key: item.id,\n          value: item.nombre,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, item.nombre);\n      }) : null))), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.getGeoData,\n        fullWidth: true,\n        variant: \"outlined\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Anterior\")), React.createElement(Link, {\n        to: \"/search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"outlined\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Buscar\")))));\n    }\n  }]);\n\n  return SearchForm;\n}(Component);\n\nSearchForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SearchForm);\n/*\nBACKUP\n\n<div className={classes.mainContainer}>\n            <Grid className={classes.formContanier} container xs={6}>\n                 <form className={classes.form}autoComplete=\"off\">\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <InputLabel htmlFor=\"species\" xs={12}>Especie</InputLabel>\n                                <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                                        value={this.state.especies}\n                                        onChange={(e)=>{this.handleChange('especies',e)}}\n                                >\n                                    <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                    <MenuItem value={'Perros'}>Perros</MenuItem>\n                                    <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.gender}\n                                onChange={(e)=>{this.handleChange('gender',e)}}\n                            >\n                                <MenuItem value={'Macho'}>Macho</MenuItem>\n                                <MenuItem value={'Hembra'}>Hembra</MenuItem>\n                            </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                        <InputLabel xs={12}>Rango de Edad</InputLabel>\n                        <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                            value={this.state.ageRank}\n                            onChange={(e)=>{this.handleChange('ageRank',e)}}\n                        >\n                            <MenuItem value={'Cachorro'}>Cachorro</MenuItem>\n                            <MenuItem value={'Joven'}>Joven</MenuItem>\n                            <MenuItem value={'Adulto'}> Adulto</MenuItem>\n                        </Select>\n                            \n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <TextField\n                                    \n                                    label=\"Ciudad\"\n                                />\n                        </FormControl> \n                    </Grid>\n                    <Button fullWidth={true} variant=\"outlined\" color=\"primary\">\n                    Buscar\n                    </Button>\n                </form>\n            </Grid>\n            <h1>{this.state.species}</h1>\n        </div>\n <LocationSubMenu items={this.state.selectItems}/>\n*/","map":{"version":3,"sources":["/Users/diegoherrera/Documents/adoptar/adoptarserver/client/src/SearchForm.js"],"names":["React","Component","Fragment","Select","FormControl","InputLabel","TextField","MenuItem","PropTypes","LocationSubMenu","Grid","Row","Button","withStyles","Link","Input","styles","theme","root","display","flexWrap","mainContainer","width","height","justifyContent","alignItems","formContanier","margin","border","borderRadius","padding","formControl","spacing","unit","minWidth","select","form","SearchForm","props","state","especies","gender","ageRank","allLocations","selectedLocation","selected","handleChange","bind","fetch","then","resp","json","data","console","log","setState","name","event","preventDefault","getDep","target","value","departamentos","municipios","myDeps","map","item","push","subLocations","dataLoaded","propName","cities","dataJson","e","busqueda","species","location","city","subLocation","classes","selectOptions","handleSubmit","id","nombre","getGeoData","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport {Select, FormControl,InputLabel,TextField,MenuItem } from '@material-ui/core/';\nimport PropTypes from 'prop-types';\nimport LocationSubMenu from './LocationSubMenu'\nimport {Grid, Row, Button} from '@material-ui/core/'\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport Input from '@material-ui/core/Input/Input';\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    mainContainer:{\n       width:'100vw',\n       height:'100vh',\n       display: 'flex',\n       justifyContent: 'center',\n       alignItems: 'center'\n        \n    },\n    formContanier:{\n        margin:'0 auto',\n        width:500,\n        border:'solid 0.5px black',\n        borderRadius:'5px',\n        padding:10\n\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n    },\n    select: {\n      width:'200px'\n    },\n    form:{\n        width:'100%'\n    },\n    \n  });\n  \n\nclass SearchForm extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            especies:'',\n            gender:'',\n            ageRank:'',\n            allLocations:'',\n            selectedLocation:'',\n            selected:false,\n        \n        }\n\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n    \n\n    componentDidMount(){\n        fetch('http://localhost:3008/provincias').then(resp=>{\n            return resp.json()\n        }).then(data=>{\n            console.log(data)\n            this.setState({\n                \n                    allLocations:data\n                \n            })\n            \n        })\n    }\n    \n       \n\n    handleChange(name,event){\n            event.preventDefault();\n            if(name == 'SelectedProvincia'){\n            console.log(\"SelectedProvinciaid: \",event)\n                const getDep = async () =>{\n                    \n                    const selectedLocation = event.target.value\n                    const data = await fetch(`https://apis.datos.gob.ar/georef/api/municipios?provincia=${event.target.value}&campos=id,nombre&max=100`)\n                    let departamentos = await data.json()\n                    departamentos = departamentos.municipios\n                    let myDeps = []\n                    departamentos.map(item=>{\n                        myDeps.push(item)\n                    })\n\n                    this.setState({\n                        \n                            selectedLocation:selectedLocation,\n                            subLocations:myDeps,\n                            selected:true,\n                            \n                            \n                        },()=>{\n                            this.setState({\n                                dataLoaded:true\n                            })\n                        }\n                        \n                    )\n                    console.log(\"data localization\",this.state.allLocations)\n                }\n                getDep()\n\n            }\n\n         const propName = name  \n        console.log(\"CORRIO\" ,event.target.value)\n            this.setState({\n              [propName]: event.target.value,\n            });\n            \n          };\n\n          getGeoData(){\n              let cities=''\n            console.log(\"cities\")\n              fetch('https://infra.datos.gob.ar/catalog/modernizacion/dataset/7/distribution/7.2/download/provincias.json').then(\n                  (resp)=>{return resp.json()}).then((dataJson)=>{\n                    cities = dataJson.map(item=>{\n                        return item\n                    })          \n                \n                    //console.log(cities)    \n        \n                  })  \n                  \n          }\n\n          handleFormSubmit(e){\n              console.log(\"FOMR SUBMIT \",e)\n            const busqueda = {\n                species:'',\n                ageRank:'',\n                gender:'',\n                location:{\n                    city:'',\n                    subLocation:''\n                }\n\n            }\n\n\n\n          }\n\n          \n          \n    \n    \n\n\n    render(){\n        const { classes } = this.props;\n        const selectOptions = this.state.allLocations\n        const selectedLocation = this.state.selectedLocation\n        const dataLoaded = this.state.data\n        \n        console.log(\"SELECTED ITEM: \",selectedLocation)\n\n\n\n/*\n\n        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                                <Select autoWidth=\"true\" className={classes.Select}\n                                        value={this.state.species}\n                                        onChange={(e)=>{this.handleChange('species',e)}}\n                                        \n                                >  \n                                    <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                    <MenuItem value={'Perros'}>Perros</MenuItem>\n                                    <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                </Select>\n                        </FormControl>    \n    \n            */\n        \n        return(\n        <div className={classes.mainContainer}>\n            <div className={classes.formContanier} xs={6}>\n                 <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.gender}\n                                onChange={(e)=>{this.handleChange('gender',e)}}\n                            >\n                                <MenuItem value={'Macho'}>Macho</MenuItem>\n                                <MenuItem value={'Hembra'}>Hembra</MenuItem>\n                            </Select>\n                        </FormControl>    \n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel shrink={true}>Test</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.species}\n                                onChange={(e)=>{this.handleChange('species',e)}}\n                            >\n                                <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                <MenuItem value={'Perros'}>Perros</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                        <InputLabel xs={12}>Rango de Edad</InputLabel>\n                        <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                            value={this.state.ageRank}\n                            onChange={(e)=>{this.handleChange('ageRank',e)}}\n                        >\n                            <MenuItem value={'Cachorro'}>Cachorro</MenuItem>\n                            <MenuItem value={'Joven'}>Joven</MenuItem>\n                            <MenuItem value={'Adulto'}> Adulto</MenuItem>\n                        </Select>\n                            \n                        </FormControl>    \n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel xs={12}>Provincia</InputLabel>\n                            <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                                value={selectedLocation}\n                                onChange={(e)=>{console.log(\"E: \",e);this.handleChange('SelectedProvincia',e)}}\n                            \n                                \n                            >\n                                {selectOptions ? selectOptions.map(item=>{\n                                    return(\n                                        <MenuItem  key={item.id} value={item.nombre} >{item.nombre}</MenuItem>\n                                        )\n                                }):null}\n                            </Select>\n                            \n                        </FormControl>\n                            \n                               \n                          \n                    </div>\n                    <Link to='/'>\n                        <Button onClick={this.getGeoData}fullWidth={true} variant=\"outlined\" color=\"primary\">\n                        Anterior\n                        </Button>\n                    </Link>\n                    <Link to='/search'> \n                        <Button type='submit' fullWidth={true} variant=\"outlined\" color=\"primary\">\n                        Buscar\n                        </Button>\n                    </Link>\n                </form>\n            </div>\n            \n        </div>\n        )\n    }\n}\n\nSearchForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(SearchForm);\n\n\n\n/*\nBACKUP\n\n<div className={classes.mainContainer}>\n            <Grid className={classes.formContanier} container xs={6}>\n                 <form className={classes.form}autoComplete=\"off\">\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <InputLabel htmlFor=\"species\" xs={12}>Especie</InputLabel>\n                                <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                                        value={this.state.especies}\n                                        onChange={(e)=>{this.handleChange('especies',e)}}\n                                >\n                                    <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                    <MenuItem value={'Perros'}>Perros</MenuItem>\n                                    <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.gender}\n                                onChange={(e)=>{this.handleChange('gender',e)}}\n                            >\n                                <MenuItem value={'Macho'}>Macho</MenuItem>\n                                <MenuItem value={'Hembra'}>Hembra</MenuItem>\n                            </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                        <InputLabel xs={12}>Rango de Edad</InputLabel>\n                        <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                            value={this.state.ageRank}\n                            onChange={(e)=>{this.handleChange('ageRank',e)}}\n                        >\n                            <MenuItem value={'Cachorro'}>Cachorro</MenuItem>\n                            <MenuItem value={'Joven'}>Joven</MenuItem>\n                            <MenuItem value={'Adulto'}> Adulto</MenuItem>\n                        </Select>\n                            \n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <TextField\n                                    \n                                    label=\"Ciudad\"\n                                />\n                        </FormControl> \n                    </Grid>\n                    <Button fullWidth={true} variant=\"outlined\" color=\"primary\">\n                    Buscar\n                    </Button>\n                </form>\n            </Grid>\n            <h1>{this.state.species}</h1>\n        </div>\n <LocationSubMenu items={this.state.selectItems}/>\n*/"]},"metadata":{},"sourceType":"module"}
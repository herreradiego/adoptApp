{"version":3,"sources":["adoptarApp_logo.png","logo.svg","LocationSubMenu.js","SearchForm.js","Search.js","Login.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LocationSubMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","menuItems","items","classes","console","log","react_default","a","createElement","index_es","fullWidth","xs","autoWidth","className","Select","value","onChange","e","handleChange","map","item","id","nombre","Component","withStyles","theme","root","display","flexWrap","mainContainer","width","height","justifyContent","alignItems","formContanier","margin","border","borderRadius","padding","formControl","spacing","unit","minWidth","select","form","SearchForm","especies","gender","ageRank","allLocations","selectedLocation","selected","bind","assertThisInitialized","fetch","then","resp","json","data","setState","name","event","_this3","preventDefault","_ref","asyncToGenerator","regenerator_default","mark","_callee","departamentos","myDeps","wrap","_context","prev","next","target","concat","sent","municipios","push","subLocations","dataLoaded","stop","apply","arguments","getDep","propName","defineProperty","dataJson","_this4","selectOptions","onSubmit","handleSubmit","autoComplete","shrink","species","key","Link","to","onClick","getGeoData","variant","color","type","Search","t","Login","manageLogin","alert","open","react","react_materialize_lib","centerLogo","brand","src","logoImg","alignLinks","node","right","large","Home","_styles","container","mainTitle","fontSize","textAlign","fontWeight","alignSelf","mainInputTitle","_myheader","position","zIndex","top","bottom","left","backgroundSize","gridTemplateRows","background","verticalAlign","&:hover","gridTemplateColumns","justifyItems","letterSpacing","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b4bb739.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adoptarApp_logo.1989c71d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport {Select, FormControl,InputLabel,TextField,MenuItem } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Grid, Row, Button} from '@material-ui/core/'\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    mainContainer:{\n       width:'100vw',\n       height:'100vh',\n       display: 'flex',\n       justifyContent: 'center',\n       alignItems: 'center'\n        \n    },\n    formContanier:{\n        margin:'0 auto',\n        width:400,\n        border:'solid 0.5px black',\n        borderRadius:'5px',\n        padding:20\n\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n    },\n    select: {\n      width:'200px'\n    },\n    form:{\n        width:'100%'\n    },\n    \n  });\n\n\nclass LocationSubMenu extends Component{\n    constructor(props){\n        super(props)\n        this.state={}   \n    }\n\n    render(){\n        const menuItems = this.props.items\n        const { classes } = this.props;\n        console.log(\"menuItems\",menuItems)\n        return(\n\n            \n            <FormControl fullWidth={true}>\n            \n            <InputLabel xs={12}>Localidad</InputLabel>\n            {menuItems ? <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                value={menuItems}\n                onChange={(e)=>{this.handleChange('Localidad',e)}}\n            >\n                {menuItems.map(item=>{\n                    return(\n                        <MenuItem value={item.id}>{item.nombre}</MenuItem>\n                        )\n                })}\n            </Select> : null}\n            \n        </FormControl>\n        )\n    }\n}\n\n\n\n\nexport default withStyles(styles)(LocationSubMenu)","import React, {Component, Fragment} from 'react';\nimport {Select, FormControl,InputLabel,TextField,MenuItem } from '@material-ui/core/';\nimport PropTypes from 'prop-types';\nimport LocationSubMenu from './LocationSubMenu'\nimport {Grid, Row, Button} from '@material-ui/core/'\nimport { withStyles } from '@material-ui/core/styles';\nimport {Link} from \"react-router-dom\";\nimport Input from '@material-ui/core/Input/Input';\n\nconst styles = theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    mainContainer:{\n       width:'100vw',\n       height:'100vh',\n       display: 'flex',\n       justifyContent: 'center',\n       alignItems: 'center'\n        \n    },\n    formContanier:{\n        margin:'0 auto',\n        width:500,\n        border:'solid 0.5px black',\n        borderRadius:'5px',\n        padding:10\n\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120,\n    },\n    select: {\n      width:'200px'\n    },\n    form:{\n        width:'100%'\n    },\n    \n  });\n  \n\nclass SearchForm extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            especies:'',\n            gender:'',\n            ageRank:'',\n            allLocations:'',\n            selectedLocation:'',\n            selected:false,\n        \n        }\n\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n    \n\n    componentDidMount(){\n        fetch('http://localhost:3008/provincias').then(resp=>{\n            return resp.json()\n        }).then(data=>{\n            console.log(data)\n            this.setState({\n                \n                    allLocations:data\n                \n            })\n            \n        })\n    }\n    \n       \n\n    handleChange(name,event){\n            event.preventDefault();\n            if(name == 'SelectedProvincia'){\n            console.log(\"SelectedProvinciaid: \",event)\n                const getDep = async () =>{\n                    \n                    const selectedLocation = event.target.value\n                    const data = await fetch(`https://apis.datos.gob.ar/georef/api/municipios?provincia=${event.target.value}&campos=id,nombre&max=100`)\n                    let departamentos = await data.json()\n                    departamentos = departamentos.municipios\n                    let myDeps = []\n                    departamentos.map(item=>{\n                        myDeps.push(item)\n                    })\n\n                    this.setState({\n                        \n                            selectedLocation:selectedLocation,\n                            subLocations:myDeps,\n                            selected:true,\n                            \n                            \n                        },()=>{\n                            this.setState({\n                                dataLoaded:true\n                            })\n                        }\n                        \n                    )\n                    console.log(\"data localization\",this.state.allLocations)\n                }\n                getDep()\n\n            }\n\n         const propName = name  \n        console.log(\"CORRIO\" ,event.target.value)\n            this.setState({\n              [propName]: event.target.value,\n            });\n            \n          };\n\n          getGeoData(){\n              let cities=''\n            console.log(\"cities\")\n              fetch('https://infra.datos.gob.ar/catalog/modernizacion/dataset/7/distribution/7.2/download/provincias.json').then(\n                  (resp)=>{return resp.json()}).then((dataJson)=>{\n                    cities = dataJson.map(item=>{\n                        return item\n                    })          \n                \n                    //console.log(cities)    \n        \n                  })  \n                  \n          }\n\n          handleFormSubmit(e){\n              console.log(\"FOMR SUBMIT \",e)\n            const busqueda = {\n                species:'',\n                ageRank:'',\n                gender:'',\n                location:{\n                    city:'',\n                    subLocation:''\n                }\n\n            }\n\n\n\n          }\n\n          \n          \n    \n    \n\n\n    render(){\n        const { classes } = this.props;\n        const selectOptions = this.state.allLocations\n        const selectedLocation = this.state.selectedLocation\n        const dataLoaded = this.state.data\n        \n        console.log(\"SELECTED ITEM: \",selectedLocation)\n\n\n\n/*\n\n        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                                <Select autoWidth=\"true\" className={classes.Select}\n                                        value={this.state.species}\n                                        onChange={(e)=>{this.handleChange('species',e)}}\n                                        \n                                >  \n                                    <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                    <MenuItem value={'Perros'}>Perros</MenuItem>\n                                    <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                </Select>\n                        </FormControl>    \n    \n            */\n        \n        return(\n        <div className={classes.mainContainer}>\n            <div className={classes.formContanier} xs={6}>\n                 <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.gender}\n                                onChange={(e)=>{this.handleChange('gender',e)}}\n                            >\n                                <MenuItem value={'Macho'}>Macho</MenuItem>\n                                <MenuItem value={'Hembra'}>Hembra</MenuItem>\n                            </Select>\n                        </FormControl>    \n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel shrink={true}>Test</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.species}\n                                onChange={(e)=>{this.handleChange('species',e)}}\n                            >\n                                <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                <MenuItem value={'Perros'}>Perros</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                        <InputLabel xs={12}>Rango de Edad</InputLabel>\n                        <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                            value={this.state.ageRank}\n                            onChange={(e)=>{this.handleChange('ageRank',e)}}\n                        >\n                            <MenuItem value={'Cachorro'}>Cachorro</MenuItem>\n                            <MenuItem value={'Joven'}>Joven</MenuItem>\n                            <MenuItem value={'Adulto'}> Adulto</MenuItem>\n                        </Select>\n                            \n                        </FormControl>    \n                    </div>\n                    <div item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel xs={12}>Provincia</InputLabel>\n                            <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                                value={selectedLocation}\n                                onChange={(e)=>{console.log(\"E: \",e);this.handleChange('SelectedProvincia',e)}}\n                            \n                                \n                            >\n                                {selectOptions ? selectOptions.map(item=>{\n                                    return(\n                                        <MenuItem  key={item.id} value={item.nombre} >{item.nombre}</MenuItem>\n                                        )\n                                }):null}\n                            </Select>\n                            \n                        </FormControl>\n                            \n                               \n                          \n                    </div>\n                    <Link to='/'>\n                        <Button onClick={this.getGeoData}fullWidth={true} variant=\"outlined\" color=\"primary\">\n                        Anterior\n                        </Button>\n                    </Link>\n                    <Link to='/search'> \n                        <Button type='submit' fullWidth={true} variant=\"outlined\" color=\"primary\">\n                        Buscar\n                        </Button>\n                    </Link>\n                </form>\n            </div>\n            \n        </div>\n        )\n    }\n}\n\nSearchForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(styles)(SearchForm);\n\n\n\n/*\nBACKUP\n\n<div className={classes.mainContainer}>\n            <Grid className={classes.formContanier} container xs={6}>\n                 <form className={classes.form}autoComplete=\"off\">\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <InputLabel htmlFor=\"species\" xs={12}>Especie</InputLabel>\n                                <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                                        value={this.state.especies}\n                                        onChange={(e)=>{this.handleChange('especies',e)}}\n                                >\n                                    <MenuItem value={'Gatos'}>Gatos</MenuItem>\n                                    <MenuItem value={'Perros'}>Perros</MenuItem>\n                                    <MenuItem value={'Unicornios'}>Unicornios</MenuItem>\n                                </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                            <InputLabel>Sexo</InputLabel>\n                            <Select autoWidth=\"true\" \n                                value={this.state.gender}\n                                onChange={(e)=>{this.handleChange('gender',e)}}\n                            >\n                                <MenuItem value={'Macho'}>Macho</MenuItem>\n                                <MenuItem value={'Hembra'}>Hembra</MenuItem>\n                            </Select>\n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                        <InputLabel xs={12}>Rango de Edad</InputLabel>\n                        <Select xs={12} autoWidth=\"true\" className={classes.Select}\n                            value={this.state.ageRank}\n                            onChange={(e)=>{this.handleChange('ageRank',e)}}\n                        >\n                            <MenuItem value={'Cachorro'}>Cachorro</MenuItem>\n                            <MenuItem value={'Joven'}>Joven</MenuItem>\n                            <MenuItem value={'Adulto'}> Adulto</MenuItem>\n                        </Select>\n                            \n                        </FormControl>    \n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControl fullWidth={true}>\n                                <TextField\n                                    \n                                    label=\"Ciudad\"\n                                />\n                        </FormControl> \n                    </Grid>\n                    <Button fullWidth={true} variant=\"outlined\" color=\"primary\">\n                    Buscar\n                    </Button>\n                </form>\n            </Grid>\n            <h1>{this.state.species}</h1>\n        </div>\n <LocationSubMenu items={this.state.selectItems}/>\n*/","import React from 'react'\n\n\nconst Search = () =>{\n\n    return(\n        <h2>Buscando...</h2>\n    )\n\n}\n\n\nexport default Search","import React,{Fragment, Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FacebookLoginButton, GoogleLoginButton, GithubLoginButton, TwitterLoginButton, InstagramLoginButton } from \"react-social-login-buttons\";\nimport { SocialIcon } from 'react-social-icons';\nimport { slide as Menu } from 'react-burger-menu'\nimport logoImg from './adoptarApp_logo.png'\nimport {Navbar, NavItem, Button, Icon } from 'react-materialize';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport ('./Login.css')\n\n\n\nclass Login extends Component{\n    \n    constructor(props){\n        super(props)\n   \n    this.manageLogin = this.manageLogin.bind(this)\n    }\n\n    manageLogin(){\n\n    }\nonClick(){\n    alert(\"CLICKED\")\n}\n\nhandleClick() {\n    this.setState({\n        open: !this.state.open\n    });\n}\n\n\n   \n\nrender(){\n \n    return(\n        \n        <Fragment className=\"main-contanier\">\n    \n            <Navbar className=\"navbar\" centerLogo brand={<a><img src={logoImg}/>AdoptarApp</a>} alignLinks=\"right\">\n            <Button node=\"a\">\n                button\n                </Button>\n                <Button node=\"a\">\n                button \n                <Icon right>\n                cloud\n                </Icon>\n                </Button>\n                <Button node=\"a\" large>\n                large button\n                </Button>\n            \n\n            </Navbar>\n            <div className=\"social\">\n                <h6 className=\"social-title\">Por favor, regístrese o ingrese para continuar</h6>\n                <div className=\"login-container\">\n                    <p>Seleccione su red social favorita</p>\n                    <button className=\"facebook-btn\">Facebook</button>\n                    <button className=\"gootle-btn\">Google</button>\n                    <button className=\"twitter-btn\">Twitter</button>\n\n                </div>\n            </div>\n        </Fragment>\n        \n        \n  );\n        \n        \n}\n}\n\n\n\n\n  export default Login;\n","import React, {Component, Fragment} from 'react';\n\n\n/*\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport {FormControl, InputLabel, Select,MenuItem, Checkbox} from '@material-ui/core/'\nimport imageHeader from './images/mainBckg.jpg'\nimport SearchForm from './SearchForm'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n/*\npink:#F41F6A\ngreen:4DC17A\n\n*/ \nconst styles = {\n    container:{\n        display: 'grid'\n    },\n    mainTitle:{\n        color:\"white\",\n        fontSize:\"2rem\",\n        textAlign:\"center\",\n        fontWeight:\"bold\",\n        alignSelf: 'center',\n    },\n    mainInputTitle:{\n        fontSize:'18px'\n    },\n    container:{\n    },\n    myheader:{\n        position: 'relative',\n        zIndex: '1',\n        position:'relative',\n        width:'100vw',\n        height:'100vh',    \n    },\n    headerContainer: {\n        position: 'absolute',\n        zIndex: '-1',\n        width:'100vw',\n        height:'100vh',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        /*backgroundImage:`url(${imageHeader})`,*/\n        backgroundSize: 'cover',\n        display: 'grid',\n        \"gridTemplateRows\": \"20% 20% 60%\"\n    },\n    btnMain:{\n        display: 'flex',\n        alignItems: 'center',\n        background:\"none\",\n        border:\"1px solid white\",\n        fontSize:\"40px\",\n        padding:\"20px\",\n        width:\"350px\",\n        height:\"300px\",\n        color:\"white\",\n        textAlign:'center',\n        verticalAlign: 'middle',\n        '&:hover':{\n            background:'white',\n            color:'#ff1c6a'\n        }\n    },\n    btnContainer:{\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        justifyItems: 'center',\n        width: '80%',\n        margin: '0 auto',\n\n\n\n    },\n    logo:{\n        color:\"white\",\n        fontSize:\"4rem\",\n        textAlign:\"center\",\n        fontWeight:\"bold\",\n        border: \"0px\",\n        margin: \"0px\",\n        \"alignSelf\": \"flex-end\",\n        letterSpacing:'12px'\n    }\n   \n\n\n\n        /*fontFamily: 'Roboto',\n        fontFtyle: 'normal',\n        fontWeight: 'bold',\n        lineHight: 'normal',\n        fontSize: '38px',\n        textAlign: 'justify',\n        letterSpacing: '0.1em'*/\n    }\n\n\nclass Home extends Component{\n\n\n    render(){\n        return(\n            <div>\n                HOME\n            </div>\n        )\n    }\n/*\n\n\n\n\n    render(){\n        const {classes} = this.props;\n        return(\n            \n            <Fragment>\n                <div class={classes.container}>\n                    <header class={classes.myheader}>\n                        <div class={classes.headerContainer}>\n                            <Typography class={classes.logo}>\n                                ADOPTAR\n                            </Typography> \n                            <Typography class={classes.mainTitle}>\n                                TE AYUDAMOS A ENCONTRAR A TU PRÓXIMO MEJOR AMIGO :)\n                            </Typography>\n                        <div class={classes.btnContainer}>\n                            <Link to='SearchForm'><a class={classes.btnMain} src=\"#\">QUIERO ADOTAR UNA MASCOTA</a></Link>\n                            <a class={classes.btnMain} src=\"#\">QUIERO DAR UNA MASCOTA EN ADOPCION RESPONSABLE</a>\n                        </div>\n                        </div>\n                    </header>   \n                </div>\n                \n            \n            </Fragment>\n                \n           \n        )\n    }*/\n\n\n}\n\n\nexport default /*withStyles(styles)*/Home","import React, { Component, Fragment } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport SearchForm from './SearchForm'\nimport Search from './Search'\nimport Login from './Login'\n\n/*Components*/\nimport Home from './Home' \n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/SearchForm\" component={SearchForm}/>\n        <Route exact path=\"/search\" component={Search}/>\n        <Route exact path=\"/login\" component={Login}/>\n      </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}